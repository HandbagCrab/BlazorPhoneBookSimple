@page "/PhoneBook"

@using PhoneBookSimple.Model
@using PhoneBookSimple.Components
@inject HttpClient http

@if (contacts is null)
{
	<div class="spinner-grow" />
}
else
{
	<div class="col-10">
		<div class="input-group mb-3 align-baseline">
			<div class="input-group-prepend">
				<span class="input-group-text">
					<span class="oi oi-magnifying-glass" id="basic-addon1" />
				</span>
			</div>
			<input type="text" class="form-control" @bind="Filter" @bind:event="oninput" placeholder="Filter" aria-label="Filter" aria-describedby="basic-addon1" />
			<button class="btn-primary col-1 ml-2 mr-2" @onclick="SortAZ">Sort <span class="oi oi-arrow-top" /></button>
			<button class="btn btn-primary col-1 ml-2" @onclick="SortZA">Sort <span class="oi oi-arrow-bottom" /></button>
		</div>
	</div>
	<div>

	</div>

	<div class="wrapper">
		@foreach (PhoneContact contact in filteredcontacts)
		{
			<Contact PhonebookEntry="contact" />
		}
	</div>
}

@code
{
	public PhoneRoot contacts { get; set; }
	public List<PhoneContact> filteredcontacts { get; set; } = null;

	private string _Filter = string.Empty;
	public string Filter
	{
		get
		{
			return (_Filter);
		}
		set
		{
			_Filter = value;
			FilterSort(_Filter.ToLower());
		}
	}
	private bool SortAlpha = false;

	protected async override Task OnInitializedAsync()
	{
		contacts = await http.GetFromJsonAsync<PhoneRoot>("http://www.mocky.io/v2/581335f71000004204abaf83");
		filteredcontacts = contacts.contacts;
	}

	public void SortAZ()
	{
		SortAlpha = true;
		FilterSort(_Filter.ToLower());
	}

	public void SortZA()
	{
		SortAlpha = false;
		FilterSort(_Filter.ToLower());
	}

	private void FilterSort(string filter)
	{
		IEnumerable<PhoneContact> filtering = contacts.contacts.Where(
			c => c.name.ToLower().Contains(filter) ||
			c.address.ToLower().Contains(filter) ||
			c.phone_number.ToLower().Contains(filter)
			);

		if (SortAlpha)
			filtering = filtering.OrderBy(f => f.name);
		else
			filtering = filtering.OrderByDescending(f => f.name);

		filteredcontacts = filtering.ToList();
	}

}
